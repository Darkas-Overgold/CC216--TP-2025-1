##Cambiar la ruta en la que se encuentra el archivo a leer
setwd("C:/Users/Usuario/Desktop/Querys de R")
hotels<- read.csv('hotel_bookings.csv', header = TRUE , sep = ',', dec = '.',stringsAsFactors = FALSE , na.strings = "")
summary(hotels)
names(hotels)
##estas lineas donde se crean los objetos hotels_data_limpia indican que se omitieron los valores NA y que se borró la columna "Company" porque no era de utilidad además eran NA'S
hotels_data.limpia <- na.omit(hotels)
hotels_data.limpia <- subset(hotels, select = -company)
head(hotels_data.limpia)

##PREGUNTA 1
install.packages("ggplot2")
install.packages("dplyr")
library(ggplot2)
library(dplyr)

datos <- data.frame(
  hotels_data.limpia$hotel ,
  hotels_data.limpia$is_canceled 
)
head(datos)
conteo_por_hotel <- table(datos$hotels_data.limpia.hotel)
conteo_por_hotel
barplot(conteo_por_hotel, 
        main = "Preferencia de hotel", 
        xlab = "Tipo de hotel", 
        ylab = "Número de reservas", 
        col = "#CCBC0F", 
        border = "black")

##pregunta 2

##ordenar datos por fecha (año)
datos_agrupados <- group_by(hotels_data.limpia, arrival_date_year)
head(datos_agrupados)
##calcular la suma de cuantas veces se quedaron en fines de semana por año
demanda_por_anio <- summarise(datos_agrupados, total_stays_in_weekend_nights = sum(stays_in_weekend_nights))

ggplot(demanda_por_anio, aes(x = arrival_date_year, y = total_stays_in_weekend_nights)) +
  geom_line() +
  labs(x = "Año de llegada", y = "Total de estancias en fines de semana")

##pregunta 3

## convertir los meses a factor para que puedan ser ordenados
hotels_data.limpia$arrival_date_month <- factor(hotels_data.limpia$arrival_date_month, levels = c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"))

## se hace un conteo de las reservas por mes
reservas_por_mes <- table(hotels_data.limpia$arrival_date_month)

## sacamos el promedio de la tabla anterior para cada mes
promedio_reservas <- mean(reservas_por_mes)

## le damos valores para definir las temporadas
temporada_alta <- promedio_reservas * 1.2  ## se usó 1.2 y 0.8 para poder generar lo que es una temporada baja y alta
temporada_baja <- promedio_reservas * 0.8  ## si es más del 20% abajo del promedio o si es mas del 20% arriba del promedio.  

## se le da los valores de las temporadas a los meses
temporada <- cut(reservas_por_mes, breaks = c(-Inf, temporada_baja, temporada_alta, Inf), labels = c("baja", "media", "alta"))
##inf y -inf son necesarios en la funcion cut porque indican de donde a donde van los valores de los promedios de las reservas

# resumen final de los meses con su numero de reservas totales y la temporada a la que pertencen 
resumen_temporadas <- data.frame(Mes = names(reservas_por_mes), Total_Reservas = as.numeric(reservas_por_mes), Temporada = temporada)
print (resumen_temporadas)


##pregunta 4
## utilizando la pregunta anterior , filtramos solo con los meses de temporada baja 
meses_temporada_baja <- resumen_temporadas[resumen_temporadas$Temporada == "baja", ]
print(meses_temporada_baja)


##pregunta 5
## filtramos las filas donde hayan niños o bebés
reservas_con_ninos_o_bebes <- hotels_data.limpia[hotels_data.limpia$children > 0 |hotels_data.limpia$babies > 0, ]
##conteo
total_reservas_con_ninos_o_bebes <- nrow(reservas_con_ninos_o_bebes)
print(total_reservas_con_ninos_o_bebes)

##pregunta 6

boxplot(hotels_data.limpia$is_canceled ~ hotels_data.limpia$required_car_parking_spaces, xlab="Espacios de parque necesarios", ylab="Porcentaje de cancelación", col="skyblue")
